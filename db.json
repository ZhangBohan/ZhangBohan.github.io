{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0}],"Cache":[{"_id":"source/CNAME","shasum":"a93f69d67e9a2acd63512f5f2ddb8f6e3abe36dc","modified":1443430371000},{"_id":"source/_posts/how-to-set-up-http-authentication-with-nginx-on-ubuntu.md","shasum":"28a602d5f16b29da2989d54c93f0e0a26d46dbe7","modified":1443434814000},{"_id":"source/_posts/java-flyway.md","shasum":"e73af3d7c41b5dae65c4cc3041ee05a65b616208","modified":1443453820000},{"_id":"source/_posts/mysql-server-has-gone-away.md","shasum":"c6ea3d3e9ddbfab945479283461de1601a518691","modified":1443494156000},{"_id":"source/_posts/open-mysql-query-log.md","shasum":"d71c076c0eb3c1c974006c28272c3da78dd700fc","modified":1443493922000},{"_id":"source/_posts/register-code.md","shasum":"8276fa8fce80946f1da08238b0e865da73f73c1a","modified":1443434837000},{"_id":"themes/landscape/Gruntfile.js","shasum":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1443425030000},{"_id":"themes/landscape/LICENSE","shasum":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1443425030000},{"_id":"themes/landscape/README.md","shasum":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1443425030000},{"_id":"themes/landscape/_config.yml","shasum":"404ec2d38c3fdd3c1fe777c8fe1d3bd5d1be8dc7","modified":1443493408000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","shasum":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","shasum":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/archive.ejs","shasum":"d7de6421497ffaf65e4f5fe4bed71fcea51fde80","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/article.ejs","shasum":"80512c7d7aa6fffc85f6ce44049197fa198b4ea2","modified":1443492055000},{"_id":"themes/landscape/layout/_partial/footer.ejs","shasum":"4b19c1080c9e6c2acd922a88ed29d183a3b5bc09","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","shasum":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/head.ejs","shasum":"da9a4ab32efc44c098f317fe64e2335989929b0e","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/header.ejs","shasum":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","shasum":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","shasum":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","shasum":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","shasum":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","shasum":"f26d30355ba9144c51e700e8edc6a4ab6144ff9a","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","shasum":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","shasum":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1443425030000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","shasum":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1443425030000},{"_id":"themes/landscape/layout/_widget/archive.ejs","shasum":"985fbeb01142b9d526cda8ebc372c1d361d69a6b","modified":1443425030000},{"_id":"themes/landscape/layout/_widget/category.ejs","shasum":"36ab37878129d152e3cbdeb839c08e52af1acd58","modified":1443425030000},{"_id":"themes/landscape/layout/_widget/links.ejs","shasum":"4d960909ca30b0972b29a043a7483a80454af2ee","modified":1443493727000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","shasum":"feba7c00fa59ba13bf870b358a499fde4473d335","modified":1443425030000},{"_id":"themes/landscape/layout/_widget/tag.ejs","shasum":"b3f321ddda6be2702a286d5b11af9533509506fb","modified":1443425030000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","shasum":"34dc8cdd96cdb41dd11cb7513f13714373e5104a","modified":1443425030000},{"_id":"themes/landscape/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1443425030000},{"_id":"themes/landscape/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1443425030000},{"_id":"themes/landscape/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1443425030000},{"_id":"themes/landscape/layout/layout.ejs","shasum":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1443425030000},{"_id":"themes/landscape/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1443425030000},{"_id":"themes/landscape/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1443425030000},{"_id":"themes/landscape/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1443425030000},{"_id":"themes/landscape/package.json","shasum":"85358dc34311c6662e841584e206a4679183943f","modified":1443425030000},{"_id":"themes/landscape/scripts/fancybox.js","shasum":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1443425030000},{"_id":"themes/landscape/source/css/_extend.styl","shasum":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/archive.styl","shasum":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/article.styl","shasum":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/comment.styl","shasum":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/footer.styl","shasum":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/header.styl","shasum":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","shasum":"36eefe6332b86b66023a9884b754d305235846b4","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","shasum":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","shasum":"890349df5145abf46ce7712010c89237900b3713","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","shasum":"bc5487b9a0bfe5f745423331824d3f3637ccd430","modified":1443425030000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","shasum":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1443425030000},{"_id":"themes/landscape/source/css/_util/grid.styl","shasum":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1443425030000},{"_id":"themes/landscape/source/css/_util/mixin.styl","shasum":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1443425030000},{"_id":"themes/landscape/source/css/_variables.styl","shasum":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1443425030000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1443425030000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1443425030000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1443425030000},{"_id":"themes/landscape/source/css/style.styl","shasum":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1443425030000},{"_id":"themes/landscape/source/js/script.js","shasum":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1443425030000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1443425030000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1443425030000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1443425030000},{"_id":"themes/landscape/source/css/images/banner.jpg","shasum":"843d9d47bf2b7b75495db11b3d765efaaae442a9","modified":1443425030000},{"_id":"public/CNAME","modified":1443494144368,"shasum":"a93f69d67e9a2acd63512f5f2ddb8f6e3abe36dc"},{"_id":"public/js/script.js","modified":1443494144373,"shasum":"2876e0b19ce557fca38d7c6f49ca55922ab666a1"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1443494144375,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1443494144377,"shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1443494144378,"shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1443494144379,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1443494144381,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1443494144383,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1443494144384,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1443494144388,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1443494144390,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1443494144392,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1443494144396,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1443494144397,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1443494144400,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1443494144405,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1443494144407,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1443494144947,"shasum":"e9ae89d3eaf09b4fb3b48f3da5e58e74ea5875b0"},{"_id":"public/css/images/banner.jpg","modified":1443494145120,"shasum":"843d9d47bf2b7b75495db11b3d765efaaae442a9"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1443494145122,"shasum":"04c3bf56d87a0828935bd6b4aee859995f321693"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1443494145123,"shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1443494145127,"shasum":"46fcc0194d75a0ddac0a038aee41b23456784814"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1443494145130,"shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e"},{"_id":"public/css/fonts/FontAwesome.otf","modified":1443494145134,"shasum":"b5b4f9be85f91f10799e87a083da1d050f842734"},{"_id":"public/2015/09/28/how-to-set-up-http-authentication-with-nginx-on-ubuntu/index.html","modified":1443494186251,"shasum":"62047270a91142fe6de546dccdcb505a4e651547"},{"_id":"public/2015/07/29/open-mysql-query-log/index.html","modified":1443494186267,"shasum":"602b780220602b88ab9239807e9447b87d3ee6a0"},{"_id":"public/2014/10/30/register-code/index.html","modified":1443494186286,"shasum":"5f0f099b93a6cd65acf97449a4d5477f52ea6272"},{"_id":"public/2014/10/13/java-flyway/index.html","modified":1443494186300,"shasum":"b7a6a977d619fd3ab672f830ae70e7794d0115ef"},{"_id":"public/archives/index.html","modified":1443494186316,"shasum":"aecf7c3c8253b6b2060886be4bb0a113ff746f83"},{"_id":"public/archives/2014/index.html","modified":1443494186321,"shasum":"5e4d7fbdaca32e73869d7c41aff185a6dd309d19"},{"_id":"public/archives/2014/10/index.html","modified":1443494186326,"shasum":"0b6aabe7926a610f7a5309880f68f07f42244c9e"},{"_id":"public/archives/2015/index.html","modified":1443494186333,"shasum":"504d2e3ddad06db07c10c4bca2f893d045480fa4"},{"_id":"public/archives/2015/07/index.html","modified":1443494186344,"shasum":"55fecc2d9e01a405ceb0ce1cb86cd83d0d5fb8fa"},{"_id":"public/archives/2015/09/index.html","modified":1443494186350,"shasum":"6d01bb9b686f12592d6033a99b942418da30cfe1"},{"_id":"public/index.html","modified":1443494186372,"shasum":"afedebcd35c4a97351aa0eb0c139a3b8d08032cb"},{"_id":"public/tags/Java/index.html","modified":1443494186377,"shasum":"717e8a663f29745c92417df17f18f29b9cc9deaf"},{"_id":"public/tags/Redis/index.html","modified":1443494186381,"shasum":"515e75183f99591b4ae24480f0f88bc5946f7468"},{"_id":"public/tags/Coding/index.html","modified":1443494186387,"shasum":"a5d5ed622069d8b69f73d2752ba16a70b780a68e"},{"_id":"public/tags/MySQL/index.html","modified":1443494186392,"shasum":"6ceed04a9ccb0278ab7edbf44798fc868d831d7e"},{"_id":"public/tags/LOG/index.html","modified":1443494186395,"shasum":"de912f5230e65c2ee98ceeb59d274a0888e2102c"},{"_id":"public/tags/DB/index.html","modified":1443494186398,"shasum":"a0f0a198203cc13c6f34fb1382ccad9652c24d6b"},{"_id":"public/tags/Ubuntu/index.html","modified":1443494186404,"shasum":"881a6087bd415ff08a9b1a45ac4f6d506520c0c8"},{"_id":"public/tags/Nginx/index.html","modified":1443494186407,"shasum":"b859d46eb0c6d32c561b038ee4da4e30b723f1e1"},{"_id":"public/tags/HTTP/index.html","modified":1443494186415,"shasum":"4abd3c1511d61f0c9256c6ce3e4a81a02aa2a271"},{"_id":"public/2015/04/02/mysql-server-has-gone-away/index.html","modified":1443494186277,"shasum":"6c3f63c1a14403834f66ed3f9af5807f32501046"},{"_id":"public/archives/2015/04/index.html","modified":1443494186340,"shasum":"d7fee65cbd58bfb89b92d6ee342d6aa32d79d2b4"},{"_id":"public/tags/DEBUG/index.html","modified":1443494186422,"shasum":"9b89f6295210cbdcc4ce7ed639a96ef6b8b1a76b"}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"手机短信验证","date":"2014-10-30T02:50:00.000Z","_content":"手机的普及程度在中国远高于邮箱，以手机作为密码找回也非常的简单和易用，尤其是手机应用更是可以直接读取用户的手机短信实现免输入就可以完成验证，所以现在的应用中越来越多的使用到了短信验证。\n\n当用户注册成大概的流程如下：\n\n1. 输入手机号，点击发送验证码\n1. 用户接收到验证码后输入到验证框\n\n用户要做的事情就是输入手机号、点击发送验证码按钮、输入验证码，就完成了手机绑定。\n\n那么在短信验证中服务器做了什么呢？\n\n1. 向服务器发送`Ajax`请求，把用户输入的手机号发送回服务器（用户点击发送验证码后）\n1. 服务器验证手机号的合法性\n1. 生成随机码、同时将随机码以手机号为键保存到服务器中,并设置过期时间\n1. 发送短信给用户\n1. 用户收到短信后会输入到验证框\n1. 用户提交表单时验证随机码是否正确\n\n## 向服务器发送Ajax请求\n\n发送`Ajax`请求这步比较简单，直接直接用`Jquery`发送请求并取得结果，代码样例如下：\n\n\t$.ajax('/auth/verify/13888888888').done(function (code) {\n    \talert(code);\n\t});\n\n## 服务器验证手机号的合法性\n\n这一步通常使用正则表达式验证是否是有效的11位的手机号：\n\n\t/1[3458]\\d{9}/g\n\n上面的规则是第一位必需是1，第二位必需在3、4、5、8中，后面带9位数字，这样就确认用户输入一定是11位的手机号了。这些验证码一般都是根据国情而定的，例如4G手机就开始启用`170`的号段，那这样的验证就不合适了，**解决办法：放松验证条件或与时俱进保持更新**\n\n## 生成随机码、同时将随机码以手机号为键保存到服务器中,并设置过期时间\n\n生成的随机码一般为了对用户友好可以直接生成四位的数字随机数，例如：1234等。我使用的是`Apache`的`commons.lang`包进行生成：\n\n\tRandomStringUtils.random(4, false, true);\n\n\n将随机码以手机号为键保存到服务器中,并设置过期时间这个看个人喜好，推荐直接存入缓存服务中，**项目中的内存缓存除外，如`ehcahe`**。不推荐把随机码直接存到项目内存中，如果期间进行服务器部署会导致验证码全部失效。\n\n我使用的方法是使用`Redis`进行保存\n\n    String phone = \"138123456789\";\n    Jedis jedis = new Jedis(\"localhost\");\n\n    String key = \"verifies:\" + phone;\n\n    String verifyCode = RandomStringUtils.random(4, false, true);\n\n    jedis.set(key, verifyCode);\n    jedis.expire(key, 60 * 5); // 五分钟内有效\n\n##发送短信给用户\n\n如何在程序中发送短信给用户呢？我们的程序并没有发送短信到用户手机中的能力，通过需要接入第三方的短信服务提供商，通过调用第三方接口来实现发送短信的功能：\n\n**首先要找到短信服务提供商，接入短信服务**\n\n开发人员通过短信服务提供商提供的接口调通调用服务\n\n发送验证码的过程如下：\n\n1. 网站（手机）请求发送信息\n2. 服务器向短信服务提供商通信，提交发送请求\n3. 短信服务提供商通过运营商将信息发送到用户的手机中\n\n##用户收到短信后会输入到验证框\n\n以下就没有什么难度了，用户收到短信后会输入到验证框，这时可以等待用户提交表单后验证\n\n\n## 需要注意的问题\n\n1. 手机正则过期，不能配置最新的手机号码。保证正则一直可用\n2. 生成的随机码不要直接在请求时返回到浏览器中，这样会导致非普通用户可以简单获取到验证码批量注册用户\n3. 发短信的频率一定要做限制，服务提供商通常都会每条信息收取几分钱\n","source":"_posts/register-code.md","raw":"title:  \"手机短信验证\"\ndate:   2014-10-30 10:50:00\ntags:\n- Java\n- Redis\n- Coding\n---\n手机的普及程度在中国远高于邮箱，以手机作为密码找回也非常的简单和易用，尤其是手机应用更是可以直接读取用户的手机短信实现免输入就可以完成验证，所以现在的应用中越来越多的使用到了短信验证。\n\n当用户注册成大概的流程如下：\n\n1. 输入手机号，点击发送验证码\n1. 用户接收到验证码后输入到验证框\n\n用户要做的事情就是输入手机号、点击发送验证码按钮、输入验证码，就完成了手机绑定。\n\n那么在短信验证中服务器做了什么呢？\n\n1. 向服务器发送`Ajax`请求，把用户输入的手机号发送回服务器（用户点击发送验证码后）\n1. 服务器验证手机号的合法性\n1. 生成随机码、同时将随机码以手机号为键保存到服务器中,并设置过期时间\n1. 发送短信给用户\n1. 用户收到短信后会输入到验证框\n1. 用户提交表单时验证随机码是否正确\n\n## 向服务器发送Ajax请求\n\n发送`Ajax`请求这步比较简单，直接直接用`Jquery`发送请求并取得结果，代码样例如下：\n\n\t$.ajax('/auth/verify/13888888888').done(function (code) {\n    \talert(code);\n\t});\n\n## 服务器验证手机号的合法性\n\n这一步通常使用正则表达式验证是否是有效的11位的手机号：\n\n\t/1[3458]\\d{9}/g\n\n上面的规则是第一位必需是1，第二位必需在3、4、5、8中，后面带9位数字，这样就确认用户输入一定是11位的手机号了。这些验证码一般都是根据国情而定的，例如4G手机就开始启用`170`的号段，那这样的验证就不合适了，**解决办法：放松验证条件或与时俱进保持更新**\n\n## 生成随机码、同时将随机码以手机号为键保存到服务器中,并设置过期时间\n\n生成的随机码一般为了对用户友好可以直接生成四位的数字随机数，例如：1234等。我使用的是`Apache`的`commons.lang`包进行生成：\n\n\tRandomStringUtils.random(4, false, true);\n\n\n将随机码以手机号为键保存到服务器中,并设置过期时间这个看个人喜好，推荐直接存入缓存服务中，**项目中的内存缓存除外，如`ehcahe`**。不推荐把随机码直接存到项目内存中，如果期间进行服务器部署会导致验证码全部失效。\n\n我使用的方法是使用`Redis`进行保存\n\n    String phone = \"138123456789\";\n    Jedis jedis = new Jedis(\"localhost\");\n\n    String key = \"verifies:\" + phone;\n\n    String verifyCode = RandomStringUtils.random(4, false, true);\n\n    jedis.set(key, verifyCode);\n    jedis.expire(key, 60 * 5); // 五分钟内有效\n\n##发送短信给用户\n\n如何在程序中发送短信给用户呢？我们的程序并没有发送短信到用户手机中的能力，通过需要接入第三方的短信服务提供商，通过调用第三方接口来实现发送短信的功能：\n\n**首先要找到短信服务提供商，接入短信服务**\n\n开发人员通过短信服务提供商提供的接口调通调用服务\n\n发送验证码的过程如下：\n\n1. 网站（手机）请求发送信息\n2. 服务器向短信服务提供商通信，提交发送请求\n3. 短信服务提供商通过运营商将信息发送到用户的手机中\n\n##用户收到短信后会输入到验证框\n\n以下就没有什么难度了，用户收到短信后会输入到验证框，这时可以等待用户提交表单后验证\n\n\n## 需要注意的问题\n\n1. 手机正则过期，不能配置最新的手机号码。保证正则一直可用\n2. 生成的随机码不要直接在请求时返回到浏览器中，这样会导致非普通用户可以简单获取到验证码批量注册用户\n3. 发短信的频率一定要做限制，服务提供商通常都会每条信息收取几分钱\n","slug":"register-code","published":1,"updated":"2015-09-28T10:07:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cif4r554e00005drrljhglk8i"},{"title":"如何打开MySQL查询日志？","date":"2015-07-29T02:30:55.000Z","_content":"\n首先找到MySQL的配置文件`my.cnf`，在`[mysqld]`下添加\n\n```\ngeneral_log_file=~/query.log\n```\n\n同时，登录MySQL console中设置打开log\n\n```\nmysql -uroot\n\n> SET global general_log = 1;\n```\n\n重启MySQL之后就可以在当前用户的HOME目录中通过`query.log`查看SQL日志了。\n\n例如，当你执行`use mysql; select * from user;`\n\n```\n150729 11:51:43\t   43 Connect\troot@localhost on\n\t\t   43 Query\tselect @@version_comment limit 1\n150729 11:51:47\t   43 Query\tSELECT DATABASE()\n\t\t   43 Init DB\tmysql\n\t\t   43 Query\tshow databases\n\t\t   43 Query\tshow tables\n\t\t   43 Field List\tcolumns_priv\n\t\t   43 Field List\tdb\n\t\t   43 Field List\tevent\n\t\t   43 Field List\tfunc\n\t\t   43 Field List\tgeneral_log\n\t\t   43 Field List\thelp_category\n\t\t   43 Field List\thelp_keyword\n\t\t   43 Field List\thelp_relation\n\t\t   43 Field List\thelp_topic\n\t\t   43 Field List\tinnodb_index_stats\n\t\t   43 Field List\tinnodb_table_stats\n\t\t   43 Field List\tndb_binlog_index\n\t\t   43 Field List\tplugin\n\t\t   43 Field List\tproc\n\t\t   43 Field List\tprocs_priv\n\t\t   43 Field List\tproxies_priv\n\t\t   43 Field List\tservers\n\t\t   43 Field List\tslave_master_info\n\t\t   43 Field List\tslave_relay_log_info\n\t\t   43 Field List\tslave_worker_info\n\t\t   43 Field List\tslow_log\n\t\t   43 Field List\ttables_priv\n\t\t   43 Field List\ttime_zone\n\t\t   43 Field List\ttime_zone_leap_second\n\t\t   43 Field List\ttime_zone_name\n\t\t   43 Field List\ttime_zone_transition\n\t\t   43 Field List\ttime_zone_transition_type\n\t\t   43 Field List\tuser\n\t\t   43 Query\tselect * from user\n```\n\n\n\n参考：http://stackoverflow.com/questions/6479107/how-to-enable-mysql-query-log\n","source":"_posts/open-mysql-query-log.md","raw":"title: 如何打开MySQL查询日志？\ndate: 2015-07-29 10:30:55\ntags:\n- MySQL\n- LOG\n---\n\n首先找到MySQL的配置文件`my.cnf`，在`[mysqld]`下添加\n\n```\ngeneral_log_file=~/query.log\n```\n\n同时，登录MySQL console中设置打开log\n\n```\nmysql -uroot\n\n> SET global general_log = 1;\n```\n\n重启MySQL之后就可以在当前用户的HOME目录中通过`query.log`查看SQL日志了。\n\n例如，当你执行`use mysql; select * from user;`\n\n```\n150729 11:51:43\t   43 Connect\troot@localhost on\n\t\t   43 Query\tselect @@version_comment limit 1\n150729 11:51:47\t   43 Query\tSELECT DATABASE()\n\t\t   43 Init DB\tmysql\n\t\t   43 Query\tshow databases\n\t\t   43 Query\tshow tables\n\t\t   43 Field List\tcolumns_priv\n\t\t   43 Field List\tdb\n\t\t   43 Field List\tevent\n\t\t   43 Field List\tfunc\n\t\t   43 Field List\tgeneral_log\n\t\t   43 Field List\thelp_category\n\t\t   43 Field List\thelp_keyword\n\t\t   43 Field List\thelp_relation\n\t\t   43 Field List\thelp_topic\n\t\t   43 Field List\tinnodb_index_stats\n\t\t   43 Field List\tinnodb_table_stats\n\t\t   43 Field List\tndb_binlog_index\n\t\t   43 Field List\tplugin\n\t\t   43 Field List\tproc\n\t\t   43 Field List\tprocs_priv\n\t\t   43 Field List\tproxies_priv\n\t\t   43 Field List\tservers\n\t\t   43 Field List\tslave_master_info\n\t\t   43 Field List\tslave_relay_log_info\n\t\t   43 Field List\tslave_worker_info\n\t\t   43 Field List\tslow_log\n\t\t   43 Field List\ttables_priv\n\t\t   43 Field List\ttime_zone\n\t\t   43 Field List\ttime_zone_leap_second\n\t\t   43 Field List\ttime_zone_name\n\t\t   43 Field List\ttime_zone_transition\n\t\t   43 Field List\ttime_zone_transition_type\n\t\t   43 Field List\tuser\n\t\t   43 Query\tselect * from user\n```\n\n\n\n参考：http://stackoverflow.com/questions/6479107/how-to-enable-mysql-query-log\n","slug":"open-mysql-query-log","published":1,"updated":"2015-09-29T02:32:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cif4r555800075drr6wopnv4d"},{"title":"java敏捷数据库迁移框架——flyway","date":"2014-10-12T17:30:00.000Z","_content":"\n看看自己的项目的那些SQL文件或者干脆连个建表语句都没有的同学是否会有想法把他们管理起来呢？向大家推荐一款非常轻量级的敏捷数据库迁移框架——[Flyway](http://flywaydb.org/)。想知道她有什么魅力吗？\n\nFlyway为大家提供了如下的实现方式：\n\n* Java API\n* 命令行\n* Maven\n* Gradle\n* Ant\n* SBT\n\n为了减少描述难度在这里使用了**Java API**，项目构建方式为**Maven**，数据库为**MySQL**\n\n## 需要环境\n* [Java 6+](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n* [Maven 2+](http://maven.apache.org/)\n* [MySQL](http://dev.mysql.com/downloads/)\n\n## 创建项目\n首先我们要在命令行中使用Maven原型插件执行如下命令\n\n\tmvn archetype:generate -B \\\n\t\t        -DarchetypeGroupId=org.apache.maven.archetypes \\\n\t\t        -DarchetypeArtifactId=maven-archetype-quickstart \\\n\t\t        -DarchetypeVersion=1.1 \\\n\t\t        -DgroupId=foo \\\n\t\t        -DartifactId=bar \\\n\t\t        -Dversion=1.0-SNAPSHOT \\\n\t\t        -Dpackage=foobar\n\n我们已经准备好开始了。当前项目的结构如下\n\n\n\t.\n\t|-- pom.xml\n\t`-- src\n\t    |-- main\n\t    |   `-- java\n\t    |       `-- foobar\n\t    |           `-- App.java\n\t    `-- test\n\t        `-- java\n\t            `-- foobar\n\t                `-- AppTest.java\n\n\n进入创建的项目\n\n\tcd bar\n\n## 增加Flyway依赖\n编辑当前目录下的`pom.xml`，增加Flyway和MySQL的依赖\n\n\t<project ...>\n\t    ...\n\t    <dependencies>\n\t        <dependency>\n\t            <groupId>com.googlecode.flyway</groupId>\n\t            <artifactId>flyway-core</artifactId>\n\t            <version>2.3</version>\n\t        </dependency>\n\t        <dependency>\n\t            <groupId>mysql</groupId>\n\t            <artifactId>mysql-connector-java</artifactId>\n\t            <version>5.1.6</version>\n\t        </dependency>\n\t        ...\n\t    </dependencies>\n\t    ...\n\t</project>\n\n## 整合Flyway\n现在我们可以将Flyway的代码放入项目中，并配置数据库，例如增加到默认生成的：`src/main/java/foobar/App.java`\n\n\tpackage foobar;\n\n\timport com.googlecode.flyway.core.Flyway;\n\n\tpublic class App {\n\t    public static void main(String[] args) {\n\t        // 创建Flyway实例\n\t        Flyway flyway = new Flyway();\n\n\t        // 设置数据库\n\t        flyway.setDataSource(\"jdbc:mysql://localhost:3306/foobar\", \"user\", \"pass\");\n\n\t        // 开始迁移\n\t        flyway.migrate();\n\t    }\n\t}\n\n## 让我们创建第一个数据迁移吧\n创建数据迁移目录`src/main/resources/db/migration`，执行命令\n\n`mkdir -p src/main/resources/db/migration`\n\n创建我们的第一个数据迁移`src/main/resources/db/migration/V1__Create_person_table.sql`\n\n\tCRETE TABLE person (\n\t    id INT,\n\t    name VARCHAR(100)\n\t);\n\n## 执行程序\n执行`App.java`（也可以直接在IDE中执行main方法）\n\n`mvn package exec:java -Dexec.mainClass=foobar.App -Dmaven.test.skip=true`[^1]\n\n如果你成功了，应该会得到如下信息\n\n\tINFO: Creating Metadata table: `foobar`.`schema_version`\n\tFeb 27, 2014 12:20:18 AM com.googlecode.flyway.core.command.DbMigrate migrate\n\tINFO: Current version of schema `foobar`: << Empty Schema >>\n\tFeb 27, 2014 12:20:18 AM com.googlecode.flyway.core.command.DbMigrate applyMigration\n\tINFO: Migrating schema `foobar` to version 1\n\tFeb 27, 2014 12:20:18 AM com.googlecode.flyway.core.command.DbMigrate logSummary\n\tINFO: Successfully applied 1 migration to schema `foobar` (execution time 00:00.194s).\n\n## 持续增加数据迁移吧\n假如我们现在需要增加第二个数据迁移，命名为：`src/main/resources/db/migration/V2__Add_people.sql`\n\n\tINSERT INTO person (id, name) VALUES (1, 'Axel');\n\tINSERT INTO person (id, name) VALUES (2, 'Mr. Foo');\n\tINSERT INTO person (id, name) VALUES (3, 'Ms. Bar');\n\n执行命令\n\n`mvn package exec:java -Dexec.mainClass=foobar.App -Dmaven.test.skip=true`\n\n输出如下\n\n\tFeb 27, 2014 12:25:00 AM com.googlecode.flyway.core.command.DbMigrate migrate\n\tINFO: Current version of schema `foobar`: 1\n\tFeb 27, 2014 12:25:00 AM com.googlecode.flyway.core.command.DbMigrate applyMigration\n\tINFO: Migrating schema `foobar` to version 2\n\tFeb 27, 2014 12:25:00 AM com.googlecode.flyway.core.command.DbMigrate logSummary\n\tINFO: Successfully applied 1 migration to schema `foobar` (execution time 00:00.047s).\n\n##总结\n通过Flyway让我们能很方便的管理数据库文件，并进行版本控制。[文档地址](http://flywaydb.org/documentation/api.html)\n\n[^1]: `-Dmaven.test.skip=true`跳过Test\n","source":"_posts/java-flyway.md","raw":"title: java敏捷数据库迁移框架——flyway\ndate: 2014-10-13 01:30:00\ntags:\n- DB\n- Java\n---\n\n看看自己的项目的那些SQL文件或者干脆连个建表语句都没有的同学是否会有想法把他们管理起来呢？向大家推荐一款非常轻量级的敏捷数据库迁移框架——[Flyway](http://flywaydb.org/)。想知道她有什么魅力吗？\n\nFlyway为大家提供了如下的实现方式：\n\n* Java API\n* 命令行\n* Maven\n* Gradle\n* Ant\n* SBT\n\n为了减少描述难度在这里使用了**Java API**，项目构建方式为**Maven**，数据库为**MySQL**\n\n## 需要环境\n* [Java 6+](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n* [Maven 2+](http://maven.apache.org/)\n* [MySQL](http://dev.mysql.com/downloads/)\n\n## 创建项目\n首先我们要在命令行中使用Maven原型插件执行如下命令\n\n\tmvn archetype:generate -B \\\n\t\t        -DarchetypeGroupId=org.apache.maven.archetypes \\\n\t\t        -DarchetypeArtifactId=maven-archetype-quickstart \\\n\t\t        -DarchetypeVersion=1.1 \\\n\t\t        -DgroupId=foo \\\n\t\t        -DartifactId=bar \\\n\t\t        -Dversion=1.0-SNAPSHOT \\\n\t\t        -Dpackage=foobar\n\n我们已经准备好开始了。当前项目的结构如下\n\n\n\t.\n\t|-- pom.xml\n\t`-- src\n\t    |-- main\n\t    |   `-- java\n\t    |       `-- foobar\n\t    |           `-- App.java\n\t    `-- test\n\t        `-- java\n\t            `-- foobar\n\t                `-- AppTest.java\n\n\n进入创建的项目\n\n\tcd bar\n\n## 增加Flyway依赖\n编辑当前目录下的`pom.xml`，增加Flyway和MySQL的依赖\n\n\t<project ...>\n\t    ...\n\t    <dependencies>\n\t        <dependency>\n\t            <groupId>com.googlecode.flyway</groupId>\n\t            <artifactId>flyway-core</artifactId>\n\t            <version>2.3</version>\n\t        </dependency>\n\t        <dependency>\n\t            <groupId>mysql</groupId>\n\t            <artifactId>mysql-connector-java</artifactId>\n\t            <version>5.1.6</version>\n\t        </dependency>\n\t        ...\n\t    </dependencies>\n\t    ...\n\t</project>\n\n## 整合Flyway\n现在我们可以将Flyway的代码放入项目中，并配置数据库，例如增加到默认生成的：`src/main/java/foobar/App.java`\n\n\tpackage foobar;\n\n\timport com.googlecode.flyway.core.Flyway;\n\n\tpublic class App {\n\t    public static void main(String[] args) {\n\t        // 创建Flyway实例\n\t        Flyway flyway = new Flyway();\n\n\t        // 设置数据库\n\t        flyway.setDataSource(\"jdbc:mysql://localhost:3306/foobar\", \"user\", \"pass\");\n\n\t        // 开始迁移\n\t        flyway.migrate();\n\t    }\n\t}\n\n## 让我们创建第一个数据迁移吧\n创建数据迁移目录`src/main/resources/db/migration`，执行命令\n\n`mkdir -p src/main/resources/db/migration`\n\n创建我们的第一个数据迁移`src/main/resources/db/migration/V1__Create_person_table.sql`\n\n\tCRETE TABLE person (\n\t    id INT,\n\t    name VARCHAR(100)\n\t);\n\n## 执行程序\n执行`App.java`（也可以直接在IDE中执行main方法）\n\n`mvn package exec:java -Dexec.mainClass=foobar.App -Dmaven.test.skip=true`[^1]\n\n如果你成功了，应该会得到如下信息\n\n\tINFO: Creating Metadata table: `foobar`.`schema_version`\n\tFeb 27, 2014 12:20:18 AM com.googlecode.flyway.core.command.DbMigrate migrate\n\tINFO: Current version of schema `foobar`: << Empty Schema >>\n\tFeb 27, 2014 12:20:18 AM com.googlecode.flyway.core.command.DbMigrate applyMigration\n\tINFO: Migrating schema `foobar` to version 1\n\tFeb 27, 2014 12:20:18 AM com.googlecode.flyway.core.command.DbMigrate logSummary\n\tINFO: Successfully applied 1 migration to schema `foobar` (execution time 00:00.194s).\n\n## 持续增加数据迁移吧\n假如我们现在需要增加第二个数据迁移，命名为：`src/main/resources/db/migration/V2__Add_people.sql`\n\n\tINSERT INTO person (id, name) VALUES (1, 'Axel');\n\tINSERT INTO person (id, name) VALUES (2, 'Mr. Foo');\n\tINSERT INTO person (id, name) VALUES (3, 'Ms. Bar');\n\n执行命令\n\n`mvn package exec:java -Dexec.mainClass=foobar.App -Dmaven.test.skip=true`\n\n输出如下\n\n\tFeb 27, 2014 12:25:00 AM com.googlecode.flyway.core.command.DbMigrate migrate\n\tINFO: Current version of schema `foobar`: 1\n\tFeb 27, 2014 12:25:00 AM com.googlecode.flyway.core.command.DbMigrate applyMigration\n\tINFO: Migrating schema `foobar` to version 2\n\tFeb 27, 2014 12:25:00 AM com.googlecode.flyway.core.command.DbMigrate logSummary\n\tINFO: Successfully applied 1 migration to schema `foobar` (execution time 00:00.047s).\n\n##总结\n通过Flyway让我们能很方便的管理数据库文件，并进行版本控制。[文档地址](http://flywaydb.org/documentation/api.html)\n\n[^1]: `-Dmaven.test.skip=true`跳过Test\n","slug":"java-flyway","published":1,"updated":"2015-09-28T15:23:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cif4r555h000c5drr8uhbjc0i"},{"title":"如何在Ubuntu上通过Nginx设置HTTP认证","date":"2015-09-28T10:03:43.000Z","_content":"\n## Apache Utils\n我们需要htpassword来创建和生成加密的用户用于基础认证（Basic Authentication）。通过以下命令安装`apache2-utils`。\n\n```\nsudo apt-get install apache2-utils\n```\n\n## 创建用户名和密码\n\n在Nginx托管的网站目录下生成一个`.htpasswd`文件。如下的命令可以创建文件同步增加用户和加密的密码到文件中\n\n```\nsudo htpasswd -c /etc/nginx/.htpasswd exampleuser\n```\n命令行为提示你输入密码\n```\nNew password:\nRe-type new password:\nAdding password for user exampleuser\n```\n\nhtpaswd的文件格式如下：\n```\nlogin:password\n```\n**注意：**htpasswd需要对nginx运行用户可访问\n\n## 更新Nginx配置\n在你的网站的Nginx配置文件增加如下两行：\n\n```\nauth_basic \"Restricted\";\nauth_basic_user_file /etc/nginx/.htpasswd;\n```\n第二行是你的htpasswd文件位置。\n\n举个例子，假如你的文件是`/etc/nginx/sites-available/website_nginx.conf`，通过vi或者其它编辑器打开该文件\n```\nsudo vi /etc/nginx/sites-available/website_nginx.conf\n```\n\n增加代码：\n\n```\nserver {\n  listen       portnumber;\n  server_name  ip_address;\n  location / {\n      root   /var/www/mywebsite.com;\n      index  index.html index.htm;\n      auth_basic \"Restricted\";                                #For Basic Auth\n      auth_basic_user_file /etc/nginx/.htpasswd;  #For Basic Auth\n  }\n}\n```\n\n\n## 刷新Nginx\n为了使配置生效，需要刷新nginx配置，然后再访问\n```\n$ sudo /etc/init.d/nginx reload\n* Reloading nginx configuration...  \n```\n\n原文：https://www.digitalocean.com/community/tutorials/how-to-set-up-http-authentication-with-nginx-on-ubuntu-12-10\n","source":"_posts/how-to-set-up-http-authentication-with-nginx-on-ubuntu.md","raw":"title: 如何在Ubuntu上通过Nginx设置HTTP认证\ndate: 2015-09-28 18:03:43\ntags:\n- Ubuntu\n- Nginx\n- HTTP\n---\n\n## Apache Utils\n我们需要htpassword来创建和生成加密的用户用于基础认证（Basic Authentication）。通过以下命令安装`apache2-utils`。\n\n```\nsudo apt-get install apache2-utils\n```\n\n## 创建用户名和密码\n\n在Nginx托管的网站目录下生成一个`.htpasswd`文件。如下的命令可以创建文件同步增加用户和加密的密码到文件中\n\n```\nsudo htpasswd -c /etc/nginx/.htpasswd exampleuser\n```\n命令行为提示你输入密码\n```\nNew password:\nRe-type new password:\nAdding password for user exampleuser\n```\n\nhtpaswd的文件格式如下：\n```\nlogin:password\n```\n**注意：**htpasswd需要对nginx运行用户可访问\n\n## 更新Nginx配置\n在你的网站的Nginx配置文件增加如下两行：\n\n```\nauth_basic \"Restricted\";\nauth_basic_user_file /etc/nginx/.htpasswd;\n```\n第二行是你的htpasswd文件位置。\n\n举个例子，假如你的文件是`/etc/nginx/sites-available/website_nginx.conf`，通过vi或者其它编辑器打开该文件\n```\nsudo vi /etc/nginx/sites-available/website_nginx.conf\n```\n\n增加代码：\n\n```\nserver {\n  listen       portnumber;\n  server_name  ip_address;\n  location / {\n      root   /var/www/mywebsite.com;\n      index  index.html index.htm;\n      auth_basic \"Restricted\";                                #For Basic Auth\n      auth_basic_user_file /etc/nginx/.htpasswd;  #For Basic Auth\n  }\n}\n```\n\n\n## 刷新Nginx\n为了使配置生效，需要刷新nginx配置，然后再访问\n```\n$ sudo /etc/init.d/nginx reload\n* Reloading nginx configuration...  \n```\n\n原文：https://www.digitalocean.com/community/tutorials/how-to-set-up-http-authentication-with-nginx-on-ubuntu-12-10\n","slug":"how-to-set-up-http-authentication-with-nginx-on-ubuntu","published":1,"updated":"2015-09-28T10:06:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cif4r555k000g5drrt2wbmiyw"},{"title":"MySQL错误 ERROR 2006 (HY000): MySQL server has gone away","date":"2015-04-02T02:33:46.000Z","_content":"MySQL下当我导入一个比较大的SQL文件时出现了`ERROR 2006 (HY000): MySQL server has gone away`错误，具体情况如下：\n\n```\n>  ll *.sql\n-rwxr-xr-x@ 1 bohan  staff    27M Mar 26 18:08 91620_all.sql\n\n> mysql test < 91620_all.sql\nERROR 2006 (HY000) at line 17128: MySQL server has gone away\n```\n\n上面可以看到，文件大小为27M导入的时候会报这个错误。\n\n## 错误原因\n> If you are using the mysql client program, its default max_allowed_packet variable is 16MB. To set a larger value, start mysql like this:\n\n```\nshell> mysql --max_allowed_packet=32M\n```\n> That sets the packet size to 32MB.\n\n我们通过MySQL[相关文档](https://dev.mysql.com/doc/refman/5.1/en/packet-too-large.html)可以发现默认大小是16M。\n\n## 解决方法\n所有大于16M的SQL文件都会报这个错误。\n\n不过我们可以直接通过命令后增加`--max_allowed_packet=32M`解决\n\n或者登录MySQL客户端，修改[系统变量](http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_max_allowed_packet)：\n\n```\n> ssh mysql\nmysql> set GLOBAL max_allowed_packet=32*1024*1024;\n```\n\n我们也可以通过修改MySQL配置`my.cnf`文件，在最后一行增加`max_allowed_packet=32M`就可以了\n\nMySQL配置文件的位置：\n\n* Windows下 `C:\\ProgamData\\MySQL\\MySQL Server5.6`\n* Linux下 `/etc/mysql`\n* Mac下通过brew安装 `/usr/local/Cellar/mysql/5.6.23`\n","source":"_posts/mysql-server-has-gone-away.md","raw":"title: \"MySQL错误 ERROR 2006 (HY000): MySQL server has gone away\"\ndate: 2015-04-2 10:33:46\ntags:\n- MySQL\n- DEBUG\n---\nMySQL下当我导入一个比较大的SQL文件时出现了`ERROR 2006 (HY000): MySQL server has gone away`错误，具体情况如下：\n\n```\n>  ll *.sql\n-rwxr-xr-x@ 1 bohan  staff    27M Mar 26 18:08 91620_all.sql\n\n> mysql test < 91620_all.sql\nERROR 2006 (HY000) at line 17128: MySQL server has gone away\n```\n\n上面可以看到，文件大小为27M导入的时候会报这个错误。\n\n## 错误原因\n> If you are using the mysql client program, its default max_allowed_packet variable is 16MB. To set a larger value, start mysql like this:\n\n```\nshell> mysql --max_allowed_packet=32M\n```\n> That sets the packet size to 32MB.\n\n我们通过MySQL[相关文档](https://dev.mysql.com/doc/refman/5.1/en/packet-too-large.html)可以发现默认大小是16M。\n\n## 解决方法\n所有大于16M的SQL文件都会报这个错误。\n\n不过我们可以直接通过命令后增加`--max_allowed_packet=32M`解决\n\n或者登录MySQL客户端，修改[系统变量](http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_max_allowed_packet)：\n\n```\n> ssh mysql\nmysql> set GLOBAL max_allowed_packet=32*1024*1024;\n```\n\n我们也可以通过修改MySQL配置`my.cnf`文件，在最后一行增加`max_allowed_packet=32M`就可以了\n\nMySQL配置文件的位置：\n\n* Windows下 `C:\\ProgamData\\MySQL\\MySQL Server5.6`\n* Linux下 `/etc/mysql`\n* Mac下通过brew安装 `/usr/local/Cellar/mysql/5.6.23`\n","slug":"mysql-server-has-gone-away","published":1,"updated":"2015-09-29T02:35:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cif4r5kn700006arrdm50t1cr"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cif4r554e00005drrljhglk8i","tag_id":"cif4r554n00015drr0lgfe22m","_id":"cif4r554s00045drryft84vog"},{"post_id":"cif4r554e00005drrljhglk8i","tag_id":"cif4r554q00025drrhwgel462","_id":"cif4r554s00055drr49cgabbb"},{"post_id":"cif4r554e00005drrljhglk8i","tag_id":"cif4r554r00035drrlek01zaw","_id":"cif4r554t00065drrlyhgaf03"},{"post_id":"cif4r555800075drr6wopnv4d","tag_id":"cif4r555a00085drrwysgpt2m","_id":"cif4r555a000a5drr1si28khe"},{"post_id":"cif4r555800075drr6wopnv4d","tag_id":"cif4r555a00095drrh3t2b3q4","_id":"cif4r555a000b5drrjpre93ft"},{"post_id":"cif4r555h000c5drr8uhbjc0i","tag_id":"cif4r555i000d5drrrv6b8aq8","_id":"cif4r555i000e5drr44q3xoel"},{"post_id":"cif4r555h000c5drr8uhbjc0i","tag_id":"cif4r554n00015drr0lgfe22m","_id":"cif4r555j000f5drrua9uy8a8"},{"post_id":"cif4r555k000g5drrt2wbmiyw","tag_id":"cif4r555l000h5drrgaz15wwz","_id":"cif4r555l000k5drrojr3tqkx"},{"post_id":"cif4r555k000g5drrt2wbmiyw","tag_id":"cif4r555l000i5drr0tybkjqj","_id":"cif4r555l000l5drr52cfso8q"},{"post_id":"cif4r555k000g5drrt2wbmiyw","tag_id":"cif4r555l000j5drrzsi5m2e9","_id":"cif4r555l000m5drrjicq8k74"},{"post_id":"cif4r5kn700006arrdm50t1cr","tag_id":"cif4r555a00085drrwysgpt2m","_id":"cif4r5knh00026arrjjivbwli"},{"post_id":"cif4r5kn700006arrdm50t1cr","tag_id":"cif4r5kne00016arr0bvqahrx","_id":"cif4r5kni00036arrqk1ykltg"}],"Tag":[{"name":"Java","_id":"cif4r554n00015drr0lgfe22m"},{"name":"Redis","_id":"cif4r554q00025drrhwgel462"},{"name":"Coding","_id":"cif4r554r00035drrlek01zaw"},{"name":"MySQL","_id":"cif4r555a00085drrwysgpt2m"},{"name":"LOG","_id":"cif4r555a00095drrh3t2b3q4"},{"name":"DB","_id":"cif4r555i000d5drrrv6b8aq8"},{"name":"Ubuntu","_id":"cif4r555l000h5drrgaz15wwz"},{"name":"Nginx","_id":"cif4r555l000i5drr0tybkjqj"},{"name":"HTTP","_id":"cif4r555l000j5drrzsi5m2e9"},{"name":"DEBUG","_id":"cif4r5kne00016arr0bvqahrx"}]}}